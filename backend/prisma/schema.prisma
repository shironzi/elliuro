// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  PROPERTY_OWNER
  ADMIN
  SUPPORT_AGENT
}

enum Status_List {
  DRAFT
  PUBLISH
  ACTIVE
  SOLD
}

enum Property_type {
  HOUSE
  APARTMENT
  HOTEL
  CONDOMINIUM
  PRIVATE
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  email      String     @unique
  name       String
  password   String
  role       Role       @default(CUSTOMER)
  created_at DateTime   @default(now())
  updated_At DateTime   @updatedAt
  Property   Property[]
}

model Property {
  id                 Int                  @id @default(autoincrement())
  status             Status               @relation(fields: [status_id], references: [id], onDelete: Cascade)
  user               User                 @relation(fields: [user_id], references: [id], onDelete: Cascade)
  details            Details?             @relation(fields: [details_id], references: [id], onDelete: Cascade)
  status_id          Int
  user_id            Int
  details_id         Int?
  Property_Images    Property_Images[]
  Property_Amenities Property_Amenities[]
}

model Status {
  id       Int         @id @default(autoincrement())
  status   Status_List @default(DRAFT)
  Property Property[]
}

model Details {
  id          Int           @id @default(autoincrement())
  title       String?
  type        Property_type @default(HOUSE)
  location    String?
  price       Int?
  description String?
  Property    Property[]
}

model Property_Images {
  id          Int      @id @default(autoincrement())
  property    Property @relation(fields: [property_id], references: [id], onDelete: Cascade)
  image       Image?   @relation(fields: [image_id], references: [id], onDelete: Cascade)
  property_id Int
  image_id    Int?
}

model Image {
  id              Int               @id @default(autoincrement())
  image           Bytes?
  added_at        DateTime?
  Property_Images Property_Images[]
}

model Property_Amenities {
  id          Int      @id @default(autoincrement())
  property    Property @relation(fields: [property_id], references: [id], onDelete: Cascade)
  amenity     Amenity? @relation(fields: [amenity_id], references: [id], onDelete: Cascade)
  property_id Int
  amenity_id  Int?
  value       Int?
}

model Amenity {
  id                 Int                  @id @default(autoincrement())
  name               String?
  Property_Amenities Property_Amenities[]
}
